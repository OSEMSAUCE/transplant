generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
  binaryTargets   = ["native", "rhel-openssl-3.0.x"]
  moduleFormat    = "esm"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["auth", "public"]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model audit_log_entries {
  instance_id String?   @db.Uuid
  id          String    @id @db.Uuid
  payload     Json?     @db.Json
  created_at  DateTime? @db.Timestamptz(6)
  ip_address  String    @default("") @db.VarChar(64)

  @@index([instance_id], map: "audit_logs_instance_id_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model flow_state {
  id                     String                @id @db.Uuid
  user_id                String?               @db.Uuid
  auth_code              String
  code_challenge_method  code_challenge_method
  code_challenge         String
  provider_type          String
  provider_access_token  String?
  provider_refresh_token String?
  created_at             DateTime?             @db.Timestamptz(6)
  updated_at             DateTime?             @db.Timestamptz(6)
  authentication_method  String
  auth_code_issued_at    DateTime?             @db.Timestamptz(6)
  saml_relay_states      saml_relay_states[]

  @@index([created_at(sort: Desc)])
  @@index([auth_code], map: "idx_auth_code")
  @@index([user_id, authentication_method], map: "idx_user_id_auth_method")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model identities {
  provider_id     String
  user_id         String    @db.Uuid
  identity_data   Json
  provider        String
  last_sign_in_at DateTime? @db.Timestamptz(6)
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)
  email           String?   @default(dbgenerated("lower((identity_data ->> 'email'::text))"))
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  users           users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([provider_id, provider], map: "identities_provider_id_provider_unique")
  @@index([email])
  @@index([user_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model instances {
  id              String    @id @db.Uuid
  uuid            String?   @db.Uuid
  raw_base_config String?
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_amr_claims {
  session_id            String   @db.Uuid
  created_at            DateTime @db.Timestamptz(6)
  updated_at            DateTime @db.Timestamptz(6)
  authentication_method String
  id                    String   @id(map: "amr_id_pk") @db.Uuid
  sessions              sessions @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([session_id, authentication_method], map: "mfa_amr_claims_session_id_authentication_method_pkey")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_challenges {
  id                     String      @id @db.Uuid
  factor_id              String      @db.Uuid
  created_at             DateTime    @db.Timestamptz(6)
  verified_at            DateTime?   @db.Timestamptz(6)
  ip_address             String      @db.Inet
  otp_code               String?
  web_authn_session_data Json?
  mfa_factors            mfa_factors @relation(fields: [factor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "mfa_challenges_auth_factor_id_fkey")

  @@index([created_at(sort: Desc)], map: "mfa_challenge_created_at_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_factors {
  id                   String           @id @db.Uuid
  user_id              String           @db.Uuid
  friendly_name        String?
  factor_type          factor_type
  status               factor_status
  created_at           DateTime         @db.Timestamptz(6)
  updated_at           DateTime         @db.Timestamptz(6)
  secret               String?
  phone                String?
  last_challenged_at   DateTime?        @unique @db.Timestamptz(6)
  web_authn_credential Json?
  web_authn_aaguid     String?          @db.Uuid
  mfa_challenges       mfa_challenges[]
  users                users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, phone], map: "unique_phone_factor_per_user")
  @@index([user_id, created_at], map: "factor_id_created_at_idx")
  @@index([user_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model one_time_tokens {
  id         String              @id @db.Uuid
  user_id    String              @db.Uuid
  token_type one_time_token_type
  token_hash String
  relates_to String
  created_at DateTime            @default(now()) @db.Timestamp(6)
  updated_at DateTime            @default(now()) @db.Timestamp(6)
  users      users               @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, token_type])
  @@index([relates_to], map: "one_time_tokens_relates_to_hash_idx", type: Hash)
  @@index([token_hash], map: "one_time_tokens_token_hash_hash_idx", type: Hash)
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model refresh_tokens {
  instance_id String?   @db.Uuid
  id          BigInt    @id @default(autoincrement())
  token       String?   @unique(map: "refresh_tokens_token_unique") @db.VarChar(255)
  user_id     String?   @db.VarChar(255)
  revoked     Boolean?
  created_at  DateTime? @db.Timestamptz(6)
  updated_at  DateTime? @db.Timestamptz(6)
  parent      String?   @db.VarChar(255)
  session_id  String?   @db.Uuid
  sessions    sessions? @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([instance_id])
  @@index([instance_id, user_id])
  @@index([parent])
  @@index([session_id, revoked])
  @@index([updated_at(sort: Desc)])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saml_providers {
  id                String        @id @db.Uuid
  sso_provider_id   String        @db.Uuid
  entity_id         String        @unique
  metadata_xml      String
  metadata_url      String?
  attribute_mapping Json?
  created_at        DateTime?     @db.Timestamptz(6)
  updated_at        DateTime?     @db.Timestamptz(6)
  name_id_format    String?
  sso_providers     sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saml_relay_states {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  request_id      String
  for_email       String?
  redirect_to     String?
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  flow_state_id   String?       @db.Uuid
  flow_state      flow_state?   @relation(fields: [flow_state_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at(sort: Desc)])
  @@index([for_email])
  @@index([sso_provider_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model schema_migrations {
  version String @id @db.VarChar(255)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sessions {
  id             String           @id @db.Uuid
  user_id        String           @db.Uuid
  created_at     DateTime?        @db.Timestamptz(6)
  updated_at     DateTime?        @db.Timestamptz(6)
  factor_id      String?          @db.Uuid
  aal            aal_level?
  not_after      DateTime?        @db.Timestamptz(6)
  refreshed_at   DateTime?        @db.Timestamp(6)
  user_agent     String?
  ip             String?          @db.Inet
  tag            String?
  mfa_amr_claims mfa_amr_claims[]
  refresh_tokens refresh_tokens[]
  users          users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([not_after(sort: Desc)])
  @@index([user_id])
  @@index([user_id, created_at], map: "user_id_created_at_idx")
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_domains {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  domain          String
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_providers {
  id                String              @id @db.Uuid
  resource_id       String?
  created_at        DateTime?           @db.Timestamptz(6)
  updated_at        DateTime?           @db.Timestamptz(6)
  saml_providers    saml_providers[]
  saml_relay_states saml_relay_states[]
  sso_domains       sso_domains[]

  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model users {
  instance_id                 String?           @db.Uuid
  id                          String            @id @db.Uuid
  aud                         String?           @db.VarChar(255)
  role                        String?           @db.VarChar(255)
  email                       String?           @db.VarChar(255)
  encrypted_password          String?           @db.VarChar(255)
  email_confirmed_at          DateTime?         @db.Timestamptz(6)
  invited_at                  DateTime?         @db.Timestamptz(6)
  confirmation_token          String?           @db.VarChar(255)
  confirmation_sent_at        DateTime?         @db.Timestamptz(6)
  recovery_token              String?           @db.VarChar(255)
  recovery_sent_at            DateTime?         @db.Timestamptz(6)
  email_change_token_new      String?           @db.VarChar(255)
  email_change                String?           @db.VarChar(255)
  email_change_sent_at        DateTime?         @db.Timestamptz(6)
  last_sign_in_at             DateTime?         @db.Timestamptz(6)
  raw_app_meta_data           Json?
  raw_user_meta_data          Json?
  is_super_admin              Boolean?
  created_at                  DateTime?         @db.Timestamptz(6)
  updated_at                  DateTime?         @db.Timestamptz(6)
  phone                       String?           @unique
  phone_confirmed_at          DateTime?         @db.Timestamptz(6)
  phone_change                String?           @default("")
  phone_change_token          String?           @default("") @db.VarChar(255)
  phone_change_sent_at        DateTime?         @db.Timestamptz(6)
  confirmed_at                DateTime?         @default(dbgenerated("LEAST(email_confirmed_at, phone_confirmed_at)")) @db.Timestamptz(6)
  email_change_token_current  String?           @default("") @db.VarChar(255)
  email_change_confirm_status Int?              @default(0) @db.SmallInt
  banned_until                DateTime?         @db.Timestamptz(6)
  reauthentication_token      String?           @default("") @db.VarChar(255)
  reauthentication_sent_at    DateTime?         @db.Timestamptz(6)
  is_sso_user                 Boolean           @default(false)
  deleted_at                  DateTime?         @db.Timestamptz(6)
  is_anonymous                Boolean           @default(false)
  identities                  identities[]
  mfa_factors                 mfa_factors[]
  one_time_tokens             one_time_tokens[]
  sessions                    sessions[]
  profileTable                profileTable[]

  @@index([instance_id])
  @@index([is_anonymous])
  @@schema("auth")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model cropTable {
  cropId                String             @id(map: "Trees_pkey") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  cropName              String
  speciesId             String?            @db.Uuid
  seedInfo              String?
  cropStock             String?
  createdAt             DateTime?          @default(now()) @db.Timestamptz(6)
  lastEditedAt          DateTime?          @default(now()) @db.Timestamptz(6)
  editedBy              String?            @db.Uuid
  deleted               Boolean?           @default(false)
  projectId             String             @db.Uuid
  organizationId        String?            @db.Uuid
  cropNotes             String?
  csvobjId              String?            @db.Uuid
  sourceSpecificSpecies String?
  csvObjTable           csvObjTable?       @relation(fields: [csvobjId], references: [csvobjId], onUpdate: NoAction, map: "Crop_csvobjId_fkey")
  organizationTable     organizationTable? @relation(fields: [organizationId], references: [organizationId], onDelete: NoAction, onUpdate: NoAction, map: "Crop_organizationId_fkey")
  projectTable          projectTable       @relation(fields: [projectId], references: [projectId], onDelete: NoAction, onUpdate: NoAction, map: "Crop_projectId_fkey")
  speciesTable          speciesTable?      @relation(fields: [speciesId], references: [speciesId], onDelete: NoAction, onUpdate: NoAction, map: "Crop_speciesId_fkey")
  plantingTable         plantingTable[]
  sourceTable           sourceTable[]
  stakeholderTable      stakeholderTable[]

  @@unique([projectId, cropName], map: "unique_crop_name_per_project")
  @@index([organizationId], map: "idx_crop_organization_id")
  @@index([projectId], map: "idx_crop_project_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model csvObjTable {
  csvobjId      String          @id(map: "csvobj_pkey") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  jsonData      Json
  createdAt     DateTime?       @default(now()) @db.Timestamp(6)
  cropTable     cropTable[]
  landTable     landTable[]
  metadataTable metadataTable[]
  projectTable  projectTable[]

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model landTable {
  landId           String             @id(map: "Land_pkey") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  landName         String
  projectId        String             @db.Uuid
  hectares         Decimal?           @db.Decimal
  gpsLat           Decimal?           @db.Decimal
  gpsLon           Decimal?           @db.Decimal
  landNotes        String?
  createdAt        DateTime?          @default(now()) @db.Timestamptz(6)
  lastEditedAt     DateTime?          @default(now()) @db.Timestamptz(6)
  editedBy         String?            @db.Uuid
  deleted          Boolean?           @default(false)
  preparation      Preparation?
  csvobjId         String?            @db.Uuid
  sourceSpecifId   String?
  polygonId        String?            @db.Uuid
  csvObjTable      csvObjTable?       @relation(fields: [csvobjId], references: [csvobjId], onUpdate: NoAction, map: "Land_csvobjId_fkey")
  projectTable     projectTable       @relation(fields: [projectId], references: [projectId], onDelete: NoAction, onUpdate: NoAction, map: "Land_projectId_fkey")
  polygonTable     polygonTable?      @relation(fields: [polygonId], references: [polygonId], onUpdate: NoAction, map: "Land_polygonId_fkey")
  plantingTable    plantingTable[]
  sourceTable      sourceTable[]
  stakeholderTable stakeholderTable[]

  @@unique([projectId, landName], map: "unique_land_name_per_project_constraint")
  @@index([projectId], map: "idx_land_project_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model metadataTable {
  metadataId  String      @id(map: "metadata_pkey") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  csvobjId    String      @db.Uuid
  csvKey      String
  dbKey       String
  createdAt   DateTime?   @default(now()) @db.Timestamp(6)
  csvObjTable csvObjTable @relation(fields: [csvobjId], references: [csvobjId], onDelete: Cascade, onUpdate: NoAction, map: "metadata_csvobjId_fkey")

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model nurseryTable {
  nurseryId    String    @id(map: "Nursery_pkey") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  gpsLat       Float
  gpsLon       Float
  capacity     Int
  nurseryNotes String?
  tradeName    String
  createdAt    DateTime? @default(now()) @db.Timestamptz(6)
  createdBy    String    @db.Uuid
  lastEditedAt DateTime? @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model plantingTable {
  plantingId       String             @id(map: "Planting_pkey") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  landId           String?            @db.Uuid
  planted          Int?
  plantingDate     DateTime?          @db.Date
  createdAt        DateTime?          @default(now()) @db.Timestamptz(6)
  lastEditedAt     DateTime?          @default(now()) @db.Timestamptz(6)
  deleted          Boolean?           @default(false)
  cropId           String?            @db.Uuid
  plantingNotes    String?
  projectId        String?            @db.Uuid
  cropTable        cropTable?         @relation(fields: [cropId], references: [cropId], onDelete: NoAction, onUpdate: NoAction, map: "Planting_cropId_fkey")
  landTable        landTable?         @relation(fields: [landId], references: [landId], onDelete: NoAction, onUpdate: NoAction, map: "Planting_landId_fkey")
  projectTable     projectTable?      @relation(fields: [projectId], references: [projectId], onDelete: NoAction, onUpdate: NoAction, map: "planting_projectid_fkey")
  stakeholderTable stakeholderTable[]

  @@unique([landId, cropId], map: "unique_land_crop")
  @@index([cropId], map: "idx_planting_crop_id")
  @@index([projectId], map: "idx_planting_project_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model speciesTable {
  speciesId      String      @id(map: "Species_pkey") @db.Uuid
  commonName     String      @unique(map: "unique_common_name")
  scientificName String?
  type           String?
  family         String?
  reference      String?
  createdAt      DateTime?   @default(now()) @db.Timestamptz(6)
  lastEditedAt   DateTime?   @default(now()) @db.Timestamptz(6)
  editedBy       String?     @db.Uuid
  deleted        Boolean?    @default(false)
  cropTable      cropTable[]

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model stakeholderTable {
  stakeholderTableId    String                @id(map: "stakeholdertable_pkey") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  organizationId        String                @db.Uuid
  stakeholderTypeId     String?               @db.Uuid
  plantingId            String?               @db.Uuid
  projectId             String?               @db.Uuid
  landId                String?               @db.Uuid
  cropId                String?               @db.Uuid
  cropTable             cropTable?            @relation(fields: [cropId], references: [cropId], onUpdate: NoAction, map: "fk_crop")
  landTable             landTable?            @relation(fields: [landId], references: [landId], onUpdate: NoAction, map: "fk_land")
  organizationTable     organizationTable     @relation(fields: [organizationId], references: [organizationId], onDelete: Cascade, onUpdate: NoAction, map: "fk_organization")
  plantingTable         plantingTable?        @relation(fields: [plantingId], references: [plantingId], onUpdate: NoAction, map: "fk_planting")
  projectTable          projectTable?         @relation(fields: [projectId], references: [projectId], onUpdate: NoAction, map: "fk_project")
  stakeholderTypesTable stakeholderTypeTable? @relation(fields: [stakeholderTypeId], references: [stakeholderTypeId], onDelete: Cascade, onUpdate: NoAction, map: "fk_stakeholdertype")

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model polygonTable {
  polygon      Unsupported("geometry")
  polygonNotes String?
  landId       String                  @unique @db.Uuid
  polygonId    String                  @id(map: "polygontable_pkey") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  landTable    landTable[]

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model spatial_ref_sys {
  srid      Int     @id
  auth_name String? @db.VarChar(256)
  auth_srid Int?
  srtext    String? @db.VarChar(2048)
  proj4text String? @db.VarChar(2048)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model sourceTable {
  sourceId          String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  sourceUrl         String
  sourceType        sourcetype
  sourceDescription String?
  createdAt         DateTime?          @default(now()) @db.Timestamptz(6)
  projectId         String?            @db.Uuid
  organizationId    String?            @db.Uuid
  landId            String?            @db.Uuid
  cropId            String?            @db.Uuid
  cropTable         cropTable?         @relation(fields: [cropId], references: [cropId], onUpdate: NoAction, map: "fk_crop")
  landTable         landTable?         @relation(fields: [landId], references: [landId], onUpdate: NoAction, map: "fk_land")
  organizationTable organizationTable? @relation(fields: [organizationId], references: [organizationId], onUpdate: NoAction, map: "fk_organization")
  projectTable      projectTable?      @relation(fields: [projectId], references: [projectId], onUpdate: NoAction, map: "fk_project")

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model stakeholderTypeTable {
  stakeholderTypeName String
  createdAt           DateTime?          @default(now()) @db.Timestamptz(6)
  lastEditedAt        DateTime?          @default(now()) @db.Timestamptz(6)
  deleted             Boolean?           @default(false)
  stakeholderTypeId   String             @id(map: "StakeholderTypes_pkey") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  stakeholderTable    stakeholderTable[]

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model organizationTable {
  organizationId    String             @id(map: "Organizations_pkey") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  organizationName  String             @unique(map: "unique_organization_name")
  contactName       String?
  contactEmail      String?
  contactPhone      String?
  address           String?
  website           String?
  organizationNotes String?
  createdAt         DateTime?          @default(now()) @db.Timestamptz(6)
  lastEditedAt      DateTime?          @default(now()) @db.Timestamptz(6)
  editedBy          String?            @db.Uuid
  deleted           Boolean?           @default(false)
  gpsLat            Float?
  gpsLon            Float?
  stakeholderTypeId String?            @db.Uuid
  cropTable         cropTable[]
  sourceTable       sourceTable[]
  stakeholderTable  stakeholderTable[]

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model projectTable {
  projectId        String             @id(map: "Projects_pkey") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  projectName      String             @unique(map: "unique_project_name")
  projectNotes     String?
  createdAt        DateTime?          @default(now()) @db.Timestamptz(6)
  lastEditedAt     DateTime?          @default(now()) @db.Timestamptz(6)
  editedBy         String?            @db.Uuid
  deleted          Boolean?           @default(false)
  csvobjId         String?            @db.Uuid
  organizationId   String?            @db.Uuid
  cropTable        cropTable[]
  landTable        landTable[]
  plantingTable    plantingTable[]
  csvObjTable      csvObjTable?       @relation(fields: [csvobjId], references: [csvobjId], onUpdate: NoAction, map: "Projects_csvobjId_fkey")
  sourceTable      sourceTable[]
  stakeholderTable stakeholderTable[]

  @@index([organizationId], map: "idx_projects_organization_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model profileTable {
  id         BigInt    @id(map: "profiles_pkey") @default(autoincrement())
  user_id    String    @db.Uuid
  full_name  String?
  bio        String?
  avatar_url String?
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @default(now()) @db.Timestamptz(6)
  users      users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_user")

  @@index([user_id], map: "idx_profiles_user_id")
  @@schema("public")
}

enum aal_level {
  aal1
  aal2
  aal3

  @@schema("auth")
}

enum code_challenge_method {
  s256
  plain

  @@schema("auth")
}

enum factor_status {
  unverified
  verified

  @@schema("auth")
}

enum factor_type {
  totp
  webauthn
  phone

  @@schema("auth")
}

enum one_time_token_type {
  confirmation_token
  reauthentication_token
  recovery_token
  email_change_token_new
  email_change_token_current
  phone_change_token

  @@schema("auth")
}

/// This enum is commented in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
enum Preparation {
  raw
  mechanical
  chemical
  burned
  grass_seed @map("grass seed")
  landscaped

  @@schema("public")
}

enum user_role {
  user
  manager
  admin
  superAdmin

  @@schema("public")
}

enum sourcetype {
  webpage
  image
  document
  other

  @@schema("public")
}
