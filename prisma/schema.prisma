generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Projects {
  projectId    String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  projectName  String?
  projectNotes String?
  createdAt    DateTime?      @default(now()) @map("created_at") @db.Timestamptz(6)
  lastEditedAt DateTime?      @default(now()) @map("last_edited_at") @db.Timestamptz(6)
  editedBy     String?        @map("edited_by") @db.Uuid
  deleted      Boolean?       @default(false)
  csvobjId     String?        @db.Uuid
  Crop         Crop[]
  Land         Land[]
  csvobj       Csvobj?        @relation(fields: [csvobjId], references: [csvobjId], onUpdate: NoAction)
  stakeholders Stakeholders[]

  @@map("Projects")
}

model Land {
  landId           String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  landName         String            @unique(map: "unique_land_name")
  projectId        String?           @db.Uuid
  hectares         Decimal?          @db.Decimal
  landHolder       String?
  gpsLat           Decimal?          @db.Decimal
  gpsLon           Decimal?          @db.Decimal
  landNotes        String?
  createdAt        DateTime?         @default(now()) @db.Timestamptz(6)
  lastEditedAt     DateTime?         @default(now()) @db.Timestamptz(6)
  editedBy         String?           @db.Uuid
  deleted          Boolean?          @default(false)
  preparation      Preparation?
  preparationId    BigInt?
  csvobjId         String?           @db.Uuid
  polygon          Json?
  csvobj           Csvobj?           @relation(fields: [csvobjId], references: [csvobjId], onUpdate: NoAction)
  PreparationTypes PreparationTypes? @relation(fields: [preparationId], references: [preparationId], onDelete: NoAction, onUpdate: NoAction)
  Projects         Projects?         @relation(fields: [projectId], references: [projectId], onDelete: NoAction, onUpdate: NoAction)
  Planting         Planting[]

  @@unique([projectId, landName], map: "unique_land_name_per_project")
  @@index([projectId], map: "idx_land_project_id")
  @@map("Land")
}

model Crop {
  cropId         String         @id(map: "Trees_pkey") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  cropName       String         @unique(map: "unique_crop_name")
  speciesId      String?        @db.Uuid
  seedInfo       String?
  cropStock      String?
  createdAt      DateTime?      @default(now()) @db.Timestamptz(6)
  lastEditedAt   DateTime?      @default(now()) @map("last_edited_at") @db.Timestamptz(6)
  editedBy       String?        @map("edited_by") @db.Uuid
  deleted        Boolean?       @default(false)
  projectId      String?        @db.Uuid
  organizationId String?        @db.Uuid
  cropNotes      String?
  csvobjId       String?        @db.Uuid
  csvobj         Csvobj?        @relation(fields: [csvobjId], references: [csvobjId], onUpdate: NoAction)
  Organizations  Organizations? @relation(fields: [organizationId], references: [organizationId], onDelete: NoAction, onUpdate: NoAction)
  Projects       Projects?      @relation(fields: [projectId], references: [projectId], onDelete: NoAction, onUpdate: NoAction)
  Species        Species?       @relation(fields: [speciesId], references: [speciesId], onDelete: NoAction, onUpdate: NoAction)
  Planting       Planting[]

  @@unique([projectId, cropName], map: "unique_crop_name_per_project")
  @@index([organizationId], map: "idx_crop_organization_id")
  @@index([projectId], map: "idx_crop_project_id")
  @@map("Crop")
}

model Planting {
  plantingId    String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  landId        String?   @db.Uuid
  planted       Int?
  plantingDate  DateTime? @db.Date
  createdAt     DateTime? @default(now()) @db.Timestamptz(6)
  lastEditedAt  DateTime? @default(now()) @db.Timestamptz(6)
  deleted       Boolean?  @default(false)
  cropId        String?   @db.Uuid
  plantingNotes String?
  Crop          Crop?     @relation(fields: [cropId], references: [cropId], onDelete: NoAction, onUpdate: NoAction)
  Land          Land?     @relation(fields: [landId], references: [landId], onDelete: NoAction, onUpdate: NoAction)

  @@unique([landId, cropId], map: "planting_land_crop_unique")
  @@index([cropId], map: "idx_planting_crop_id")
  @@map("Planting")
}

model Organizations {
  organizationId    String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  organizationName  String         @unique(map: "unique_organization_name")
  contactName       String?
  contactEmail      String?
  contactPhone      String?        @map("contact_phone")
  address           String?
  website           String?
  organizationNotes String?
  createdAt         DateTime?      @default(now()) @map("created_at") @db.Timestamptz(6)
  lastEditedAt      DateTime?      @default(now()) @map("last_edited_at") @db.Timestamptz(6)
  editedBy          String?        @map("edited_by") @db.Uuid
  deleted           Boolean?       @default(false)
  isNursery         Boolean?       @default(false) @map("is_nursery")
  gpsLat            Float?
  gpsLon            Float?
  Crop              Crop[]
  stakeholders      Stakeholders[]

  @@map("Organizations")
}

model Species {
  speciesId      String    @id @default(uuid()) @map("species_id") @db.Uuid
  commonName     String    @unique(map: "unique_common_name") @map("common_name")
  scientificName String?   @map("scientific_name")
  type           String?
  family         String?
  reference      String?
  createdAt      DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  lastEditedAt   DateTime? @default(now()) @map("last_edited_at") @db.Timestamptz(6)
  editedBy       String?   @map("edited_by") @db.Uuid
  deleted        Boolean?  @default(false)
  Crop           Crop[]

  @@map("Species")
}

model PreparationTypes {
  notes         String?
  createdAt     DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  lastEditedAt  DateTime? @default(now()) @map("last_edited_at") @db.Timestamptz(6)
  deleted       Boolean?  @default(false)
  preparationId BigInt    @id @default(autoincrement()) @map("preparation_id")
  Land          Land[]

  @@map("PreparationTypes")
}

model Stakeholders {
  stakeholderId      String            @id @default(dbgenerated("gen_random_uuid()")) @map("stakeholder_id") @db.Uuid
  projectId          String?           @map("project_id") @db.Uuid
  organizationId     String?           @map("organization_id") @db.Uuid
  stakeholderTypeId  String?           @map("stakeholder_type_id") @db.Uuid
  contributionAmount Decimal?          @map("contribution_amount") @db.Decimal
  stakeNotes         String?           @map("stake_notes")
  createdAt          DateTime?         @default(now()) @map("created_at") @db.Timestamptz(6)
  lastEditedAt       DateTime?         @default(now()) @map("last_edited_at") @db.Timestamptz(6)
  deleted            Boolean?          @default(false)
  organization       Organizations?    @relation(fields: [organizationId], references: [organizationId], onDelete: NoAction, onUpdate: NoAction)
  project            Projects?         @relation(fields: [projectId], references: [projectId], onDelete: NoAction, onUpdate: NoAction)
  stakeholderType    StakeholderTypes? @relation(fields: [stakeholderTypeId], references: [stakeholderTypeId], onDelete: NoAction, onUpdate: NoAction)

  @@map("Stakeholders")
}

model StakeholderTypes {
  stakeholderTypeId   String         @id @default(uuid()) @map("stakeholder_type_id") @db.Uuid
  stakeholderTypeName String?        @map("stakeholder_type_name")
  createdAt           DateTime?      @default(now()) @map("created_at") @db.Timestamptz(6)
  lastEditedAt        DateTime?      @default(now()) @map("last_edited_at") @db.Timestamptz(6)
  deleted             Boolean?       @default(false)
  stakeholders        Stakeholders[]

  @@map("StakeholderTypes")
}

model Csvobj {
  csvobjId  String     @id @default(dbgenerated("gen_random_uuid()")) @map("csvobj_id") @db.Uuid
  jsonData  Json       @map("json_data")
  createdAt DateTime?  @default(now()) @map("created_at") @db.Timestamp(6)
  Crop      Crop[]
  Land      Land[]
  Projects  Projects[]
  metadata  Metadata[]

  @@map("csvobj")
}

model Metadata {
  metadataId String    @id @default(dbgenerated("gen_random_uuid()")) @map("metadata_id") @db.Uuid
  csvobjId   String    @map("csvobj_id") @db.Uuid
  csvKey     String    @map("csv_key")
  dbKey      String    @map("db_key")
  createdAt  DateTime? @default(now()) @map("created_at") @db.Timestamp(6)
  csvobj     Csvobj    @relation(fields: [csvobjId], references: [csvobjId], onDelete: Cascade, onUpdate: NoAction)

  @@map("metadata")
}

enum Preparation {
  raw
  mechanical
  chemical
  burned
  grass_seed @map("grass seed")
  landscaped
}
